{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n\n\n#----------------------------------------------------------------------------*/\n#                                                                            */\n#    Module:       Vex code                                                  */\n#    Author:       C:\\Users\\FRC                                              */\n#    Created:      Tue Nov 18 2022                                           */\n#    Description:  V5 project                                                */\n#                                                                            */\n#----------------------------------------------------------------------------*/\n\n\n\"\"\"\nThis file contains the code that is used to print an image to the brain screen.\nTo test an image, set imageData, compressRatio, and palette to the values printed out by image compression.py.\n\"\"\"\n\n\n#This function converts a pixel color from \"#rrggbb\" to (r, g, b)\n#This is only used because PIL doesn't take colors in the format \"#rrggbb\"\ndef hexToTuple(hexString):\n    return (int(hexString[1:3], 16), int(hexString[3:5], 16), int(hexString[5:], 16))\n\n\n\nimageData = () #set this to the image data\n\ncompressRatio = (1, 3) #set this to the image's compression ratio\n\npalette = [] #set this to the image's color palette\n\n\n\ndef main():\n    x = (480 - len(imageData)*compressRatio[1]) // 2 #this makes sure that images with a width smaller than 480 will be centered\n\n    for column in imageData: #for every column in the image\n        y = 0\n\n        for colorLength in column: #for every tuple of pixel data in the image\n            color = palette[colorLength[0]]\n        \n            for i in range(0, colorLength[1]): #repeat for length of color\n                for j in range(0, compressRatio[0]): #vertical compression\n                    for k in range(0, compressRatio[1]): #horizontal compression\n                        brain.screen.set_pen_color(color)\n                        brain.screen.draw_pixel(x+k,y+j)\n                \n                y += compressRatio[0] #adds change in y for every row of pixels placed\n        x += compressRatio[1] #adds change in x for every column of pixels placed\n\nmain()","textLanguage":"python","rconfig":[],"slot":4,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}