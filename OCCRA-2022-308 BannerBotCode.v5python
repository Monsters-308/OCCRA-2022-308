{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nsensors_array = Triport(Ports.PORT1)\nLeftMotor1 = Motor29(brain.three_wire_port.a, False)\nLeftMotor2 = Motor29(brain.three_wire_port.b, False)\nLeftMotor3 = Motor29(brain.three_wire_port.c, False)\nRightMotor1 = Motor29(brain.three_wire_port.d, False)\nRightMotor2 = Motor29(brain.three_wire_port.e, False)\nRightMotor3 = Motor29(brain.three_wire_port.f, False)\ncontroller_1 = Controller(PRIMARY)\nrange_finder_1a = Sonar(sensors_array.a)\nlightb = Light(sensors_array.c)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n#endregion VEXcode Generated Robot Configuration\n\n#----------------------------------------------------------------------------*/\n#                                                                            */\n#    Module:       OCCRA-2022-308                                            */\n#    Author:       C:\\Users\\FRC                                              */\n#    Created:      Tue Sep 29 2022                                           */\n#    Description:  V5 project                                                */\n#                                                                            */\n#----------------------------------------------------------------------------*/\n\n# ---- START VEXCODE CONFIGURED DEVICES ----\n# LeftMotor1       motor29       A\n# LeftMotor2       motor29       B\n# LeftMotor3       motor29       C\n# RightMotor1      motor29       D\n# RightMotor2      motor29       E\n# RightMotor3      motor29       F\n# ---- END VEXCODE CONFIGURED DEVICES ----\n\ndef main():\n    #declare speed\n    #for failsave set to divide by 6, normal is 2; makes robot slower\n    Axis3=controller_1.axis3.position()/6\n\n    #failsave -1/6, normal -1/2\n    Axis1=controller_1.axis1.position()*(-1/2)\n\n    \n\n    \n    if abs(Axis3)<5:\n        Axis3=0\n    if abs(Axis1)<5:\n        Axis1=0\n\n    #if only axis 3 is pressed, go forward or backward\n    #if Axis3 != 0:\n        #driveLeft(Axis3, PERCENT)\n        #driveRight(Axis3, PERCENT)\n    #if axis 1 is pressed, go right or left\n    #elif Axis1 != 0 and Axis1 >0:\n     #   driveLeft(-1*Axis3, PERCENT) \n    #elif Axis1 != 0 and Axis1 < 0:\n     #   driveRight(-1*Axis1, PERCENT)\n\n    #this declares the speeds, will go forward\n    leftSpeed = Axis3\n    rightSpeed = Axis3\n    #this will \n\n    #set to go left or right drivetrain, it drives leftish, so make it go a bit more right to straighten it\n    if Axis1 > 0:\n        leftSpeed = leftSpeed - Axis1 -1 #straightens it out by -1\n        rightSpeed = rightSpeed + Axis1\n    elif Axis1 < 0:\n        leftSpeed = leftSpeed - Axis1\n        rightSpeed = rightSpeed + Axis1 \n\n    \n\n\n    #set speeds\n    driveLeft(leftSpeed, PERCENT)\n    driveRight(rightSpeed, PERCENT)\n\n \n\n\n \n\n\n\n\ndef driveLeft(speed : int, units : PercentUnits):\n    LeftMotor1.set_velocity(int(speed), units)\n    LeftMotor1.spin(FORWARD)\n    LeftMotor2.set_velocity(int(speed), units)\n    LeftMotor2.spin(FORWARD)\n    LeftMotor3.set_velocity(int(speed), units)\n    LeftMotor3.spin(FORWARD)\n\n\n\ndef driveRight(speed : int, units : PercentUnits):\n    RightMotor1.set_velocity(int(speed), units)\n    RightMotor1.spin(REVERSE)\n    RightMotor2.set_velocity(int(speed), units)\n    RightMotor2.spin(REVERSE)\n    RightMotor3.set_velocity(int(speed), units)\n    RightMotor3.spin(REVERSE)\n    \n\n\n\n\nwhile True:\n    main()","textLanguage":"python","rconfig":[{"port":[1],"name":"LeftMotor1","customName":true,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[2],"name":"LeftMotor2","customName":true,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[3],"name":"LeftMotor3","customName":true,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"RightMotor1","customName":true,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"RightMotor2","customName":true,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[6],"name":"RightMotor3","customName":true,"deviceType":"Motor393","deviceClass":"motor29","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[],"name":"controller_1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[1],"name":"sensors_array","customName":true,"deviceType":"Expander","deviceClass":"triport","setting":{"id":"partner"},"triportSourcePort":22},{"port":[1,2],"name":"range_finder_1a","customName":false,"deviceType":"RangeFinder","deviceClass":"sonar","setting":{"id":"partner"},"triportSourcePort":1}],"slot":6,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","target":"Physical"}